#!/bin/bash

USAGE="
Usage: tmux-go [--dev [sub directory]] [--help]

Create a preconfigured tmux session for general futzing around.

If the option '--dev' is specified, then a tmux session
designed for programming is created, if it does not already exist.

If the 'dev' session already exists and this script is not
running in a tmux session, then it will attach to the 'dev'
session.

If the 'dev' session does not exist, then the session is
created and attached to only if this script is not already running
within a tmux session.

If a sub directory is supplied together with the '--dev' command-line
option, then the file system directory of the two panes of the first window 
of the session is set as follows:
   ~/src/github.com/enigmata/<sub directory>

"

if [[ "$1" == "--help" ]]
then
    echo "$USAGE"
    exit 1
fi

DEFAULT_SESSION_NAME="futz"
SESSION_NAME=$DEFAULT_SESSION_NAME

if [[ "$1" == "--dev" ]]
then
    SOURCE_CODE_BASE_DIR=~/src/github.com/enigmata
    TARGET_SOURCE_DIR=$SOURCE_CODE_BASE_DIR
    SESSION_NAME="dev"

    if [[ $# > 1 ]]
    then
        TARGET_SOURCE_DIR="$SOURCE_CODE_BASE_DIR"/"$2"
        if [[ ! -d "$TARGET_SOURCE_DIR" ]]
        then
            echo "ERROR: \"$2\" is not a valid sub dir of $SOURCE_CODE_BASE_DIR"
            echo "$USAGE"
            echo "Valid sub directories:"
            ls $SOURCE_CODE_BASE_DIR
            exit 1
        fi
        SESSION_NAME=$SESSION_NAME"_"${2%%/*}
    fi
fi

tmux has-session -t =$SESSION_NAME

if [[ $? != 0 ]]
then
    if [[ "$SESSION_NAME" == "$DEFAULT_SESSION_NAME" ]]
    then
        tmux new-session -s $SESSION_NAME -n goofing -d
        tmux send-keys -t $SESSION_NAME "cd $HOME" C-m
        tmux split-window -h -t $SESSION_NAME
        tmux send-keys -t $SESSION_NAME:1.2 "cd $HOME" C-m
        tmux send-keys -t $SESSION_NAME:1.1 "clear" C-m
        tmux send-keys -t $SESSION_NAME:1.2 "clear" C-m
        tmux new-window -t $SESSION_NAME -n code
        tmux send-keys -t $SESSION_NAME:2 "cd $HOME/src" C-m
        tmux send-keys -t $SESSION_NAME:2 "clear" C-m
        tmux select-window -t $SESSION_NAME:1
    else
        tmux new-session -s $SESSION_NAME -n compile_edit -d
        tmux send-keys -t $SESSION_NAME "cd $TARGET_SOURCE_DIR" C-m
        tmux split-window -h -t $SESSION_NAME
        tmux send-keys -t $SESSION_NAME:1.2 "cd $TARGET_SOURCE_DIR" C-m
        tmux send-keys -t $SESSION_NAME:1.1 'clear' C-m
        tmux send-keys -t $SESSION_NAME:1.2 'clear' C-m
        tmux new-window -t $SESSION_NAME -n console
        tmux send-keys -t $SESSION_NAME:2 'cd ~' C-m
        tmux send-keys -t $SESSION_NAME:2 'clear' C-m
        tmux select-window -t $SESSION_NAME:1
    fi
    echo \"$SESSION_NAME\" session created

else
    echo \"$SESSION_NAME\" session already exists
fi

if [[ -z "$TMUX" ]]
then
    tmux attach -t =$SESSION_NAME
else
    echo did not attach because you\'re already in a session
fi
